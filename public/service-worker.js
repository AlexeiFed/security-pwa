/**
 * @file: service-worker.js
 * @description: Service Worker –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ —Ç—Ä–µ–≤–æ–∂–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤
 * @dependencies: OneSignal, Web Audio API
 * @created: 2025-07-11
 */

/* eslint-disable */

// –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
const CACHE_NAME = 'security-pwa-v6';
const urlsToCache = [
    '/',
    '/static/js/bundle.js',
    '/static/css/main.css',
    '/logo192.png',
    '/logo512.png',
    '/manifest.json',
    '/alarm.mp3'
];

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Service Worker
self.addEventListener('install', (event) => {
    console.log('üîß Service Worker: —É—Å—Ç–∞–Ω–æ–≤–∫–∞ v7');
    event.waitUntil(
        caches.open(CACHE_NAME)
            .then((cache) => {
                console.log('üì¶ Service Worker: –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤');
                return cache.addAll(urlsToCache);
            })
            .catch((error) => {
                console.error('‚ùå Service Worker: –æ—à–∏–±–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
            })
    );
    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –Ω–æ–≤—ã–π Service Worker —Å—Ä–∞–∑—É
    self.skipWaiting();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ PWA
self.addEventListener('beforeinstallprompt', (event) => {
    console.log('üì± PWA: –¥–æ—Å—Ç—É–ø–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∞');
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø—Ä–æ–º–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ–∑–∂–µ
    event.preventDefault();
    self.deferredPrompt = event;
});

// –ê–∫—Ç–∏–≤–∞—Ü–∏—è Service Worker
self.addEventListener('activate', (event) => {
    console.log('üöÄ Service Worker: –∞–∫—Ç–∏–≤–∞—Ü–∏—è v6');
    event.waitUntil(
        caches.keys().then((cacheNames) => {
            return Promise.all(
                cacheNames.map((cacheName) => {
                    if (cacheName !== CACHE_NAME) {
                        console.log('üóëÔ∏è Service Worker: —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∫—ç—à–∞', cacheName);
                        return caches.delete(cacheName);
                    }
                })
            );
        })
    );
    event.waitUntil(
        (async () => {
            await clients.claim();
            console.log('‚úÖ Service Worker: –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
            // –û–ø–æ–≤–µ—â–∞–µ–º –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏ –æ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏
            const allClients = await clients.matchAll({ type: 'window', includeUncontrolled: true });
            for (const client of allClients) {
                client.postMessage({ type: 'NEW_VERSION_AVAILABLE' });
            }
        })()
    );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ fetch –∑–∞–ø—Ä–æ—Å–æ–≤
self.addEventListener('fetch', (event) => {
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –∫ OneSignal
    if (event.request.url.includes('onesignal.com')) {
        return;
    }

    // Network-first –¥–ª—è index.html –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    if (event.request.mode === 'navigate') {
        event.respondWith(
            fetch(event.request)
                .then((response) => {
                    // –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à
                    return caches.open(CACHE_NAME).then((cache) => {
                        cache.put(event.request, response.clone());
                        return response;
                    });
                })
                .catch(() => {
                    return caches.match(event.request);
                })
        );
        return;
    }

    // Cache-first –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    event.respondWith(
        caches.match(event.request)
            .then((response) => {
                return response || fetch(event.request);
            })
            .catch((error) => {
                console.error('‚ùå Service Worker: –æ—à–∏–±–∫–∞ fetch:', error);
            })
    );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (—á–∏—Å—Ç—ã–π web push)
self.addEventListener('push', function (event) {
    let data = {};
    try {
        data = event.data.json();
    } catch {
        data = { title: '–¢—Ä–µ–≤–æ–≥–∞!', body: '–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª —Ç—Ä–µ–≤–æ–≥–∏', type: 'alarm' };
    }

    const options = {
        body: data.body,
        icon: '/icons/logo-vityaz.png',
        badge: '/icons/logo-vityaz.png',
        data: data,
        requireInteraction: data.type === 'force_logout', // –¢—Ä–µ–±—É–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è force_logout
        tag: data.type === 'force_logout' ? 'force_logout' : (data.type === 'alarm' ? 'alarm' : 'notification'),
        actions: data.type === 'force_logout' ? [
            {
                action: 'logout',
                title: '–í—ã–π—Ç–∏'
            },
            {
                action: 'close',
                title: '–ó–∞–∫—Ä—ã—Ç—å'
            }
        ] : [
            {
                action: 'open',
                title: '–û—Ç–∫—Ä—ã—Ç—å PWA'
            },
            {
                action: 'close',
                title: '–ó–∞–∫—Ä—ã—Ç—å'
            }
        ]
    };

    event.waitUntil(
        self.registration.showNotification(data.title, options)
    );

    // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫ —Ç—Ä–µ–≤–æ–≥–∏
    if (data.type === 'alarm') {
        playAlarmSound();
    }

    // –î–ª—è force_logout —Å—Ä–∞–∑—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –∫–ª–∏–µ–Ω—Ç–∞–º
    if (data.type === 'force_logout') {
        console.log('üö™ –ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–º –≤—ã—Ö–æ–¥–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞–º');
        event.waitUntil(
            clients.matchAll({
                type: 'window',
                includeUncontrolled: true
            }).then(function (clientList) {
                console.log('üîç –ù–∞–π–¥–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤—ã—Ö–æ–¥–∞:', clientList.length);
                for (let i = 0; i < clientList.length; i++) {
                    const client = clientList[i];
                    if (client.url.includes(self.location.origin)) {
                        console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º FORCE_LOGOUT –∫–ª–∏–µ–Ω—Ç—É:', client.url);
                        client.postMessage({
                            type: 'FORCE_LOGOUT',
                            data: data
                        });
                    }
                }
            })
        );
    }
});

function playAlarmSound() {
    try {
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π AudioContext –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
        const audioContext = new (window.AudioContext || window.webkitAudioContext)();

        // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
        setTimeout(() => {
            fetch('/alarm.mp3')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∑–≤—É–∫ —Ç—Ä–µ–≤–æ–≥–∏');
                    }
                    return response.arrayBuffer();
                })
                .then(buffer => audioContext.decodeAudioData(buffer))
                .then(decoded => {
                    const source = audioContext.createBufferSource();
                    source.buffer = decoded;
                    source.connect(audioContext.destination);
                    source.start(0);
                    console.log('üîä –ó–≤—É–∫ —Ç—Ä–µ–≤–æ–≥–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è');
                })
                .catch(error => {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞ —Ç—Ä–µ–≤–æ–≥–∏:', error);
                });
        }, 100);
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è AudioContext:', error);
    }
}

self.addEventListener('notificationclick', function (event) {
    console.log('üñ±Ô∏è Service Worker: –∫–ª–∏–∫ –ø–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—é', event.notification.data);

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    event.notification.close();

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    if (event.action === 'close') {
        console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–∫—Ä—ã–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ');
        return;
    }

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –≤—ã—Ö–æ–¥
    if (event.action === 'logout') {
        console.log('üö™ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –≤—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
        event.waitUntil(
            clients.matchAll({
                type: 'window',
                includeUncontrolled: true
            }).then(function (clientList) {
                for (let i = 0; i < clientList.length; i++) {
                    const client = clientList[i];
                    if (client.url.includes(self.location.origin)) {
                        client.postMessage({
                            type: 'FORCE_LOGOUT',
                            data: event.notification.data
                        });
                        // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º
                        return client.focus();
                    }
                }
            })
        );
        return;
    }

    // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫ –¥–ª—è —Ç—Ä–µ–≤–æ–∂–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    if (event.notification.data?.type === 'alarm') {
        playAlarmSound();
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è
    let urlToOpen = '/';

    if (event.notification.data?.type === 'alarm') {
        // –î–ª—è —Ç—Ä–µ–≤–æ–∂–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ç—Ä–µ–≤–æ–∂–Ω—ã–π —ç–∫—Ä–∞–Ω
        const objectId = event.notification.data?.objectId;
        urlToOpen = objectId ? `/alarm/${objectId}` : '/alarm';
    } else if (event.notification.data?.type === 'force_logout') {
        // –î–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–º –≤—ã—Ö–æ–¥–µ –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
        urlToOpen = '/login';
    } else {
        urlToOpen = event.notification.data?.url || '/';
    }

    console.log('üéØ URL –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:', urlToOpen);

    event.waitUntil(
        clients.matchAll({
            type: 'window',
            includeUncontrolled: true
        }).then(function (clientList) {
            console.log('üîç –ù–∞–π–¥–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–≤:', clientList.length);

            // –ò—â–µ–º —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–æ–µ PWA –æ–∫–Ω–æ
            for (let i = 0; i < clientList.length; i++) {
                const client = clientList[i];
                console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∏–µ–Ω—Ç:', client.url);

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–∞—à–µ PWA –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                if (client.url.includes(self.location.origin)) {
                    console.log('‚úÖ –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º PWA –æ–∫–Ω–µ');

                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                    client.postMessage({
                        type: 'NAVIGATE_TO_ALARM',
                        url: urlToOpen,
                        data: event.notification.data
                    });

                    return client.focus();
                }
            }

            // –ï—Å–ª–∏ PWA –æ–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤–æ–µ
            console.log('üÜï –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤–æ–µ PWA –æ–∫–Ω–æ —Å URL:', urlToOpen);
            return clients.openWindow(urlToOpen);
        }).catch((error) => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ PWA:', error);
            // Fallback - –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ —Ç–µ–∫—É—â–µ–º –æ–∫–Ω–µ
            return clients.openWindow(urlToOpen);
        })
    );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
self.addEventListener('notificationclose', (event) => {
    console.log('‚ùå Service Worker: —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ', event);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
self.addEventListener('message', (event) => {
    console.log('üí¨ Service Worker: –ø–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ', event.data);

    if (event.data && event.data.type === 'PLAY_ALARM') {
        // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º —Ç—Ä–µ–≤–æ–∂–Ω—ã–π –∑–≤—É–∫ –≤ Service Worker
        playAlarmSound();
    }
    if (event.data && event.data.type === 'SKIP_WAITING') {
        self.skipWaiting();
    }
    if (event.data && event.data.type === 'GET_VERSION') {
        event.ports[0].postMessage({ version: 'v2' });
    }
}); 