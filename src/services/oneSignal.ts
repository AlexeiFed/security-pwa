/**
 * @file: oneSignal.ts
 * @description: –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å OneSignal push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
 * @dependencies: react-onesignal
 * @created: 2025-06-27
 */

// OneSignal App ID (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à)
const ONESIGNAL_APP_ID = 'd0129f89-d19e-4587-ae17-30df11c2ec5d';

// OneSignal REST API Key
const ONESIGNAL_REST_API_KEY = 'os_v2_app_2ajj7cortzcyplqxgdprdqxmluqpxfh54bdecl4zaudgxlye26loozgulpyqvndhubeascngulm3uqj2iiqne47azzl3ecu76whmwwi';

// –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ OneSignal SDK
let OneSignal: any = null;
let oneSignalSDKLoading: Promise<any> | null = null;

const loadOneSignalSDK = async () => {
    if (OneSignal) return OneSignal;
    if (oneSignalSDKLoading) return oneSignalSDKLoading;

    oneSignalSDKLoading = new Promise((resolve, reject) => {
        if (window.OneSignal) {
            OneSignal = window.OneSignal;
            console.log('window.OneSignal –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ:', window.OneSignal);
            resolve(OneSignal);
            return;
        }
        const script = document.createElement('script');
        script.src = 'https://cdn.onesignal.com/sdks/OneSignalSDK.js';
        script.async = true;
        script.defer = true;
        script.onload = () => {
            OneSignal = window.OneSignal;
            console.log('window.OneSignal –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏:', window.OneSignal);
            resolve(OneSignal);
        };
        script.onerror = reject;
        document.head.appendChild(script);
    });
    return oneSignalSDKLoading;
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OneSignal (push-—Å—Ç–∏–ª—å)
export const initializeOneSignal = async () => {
    try {
        console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é OneSignal...');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É Service Worker
        if (!('serviceWorker' in navigator)) {
            console.error('‚ùå Service Worker –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ —ç—Ç–æ–º –±—Ä–∞—É–∑–µ—Ä–µ');
            return false;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É Push API
        if (!('PushManager' in window)) {
            console.error('‚ùå Push API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ —ç—Ç–æ–º –±—Ä–∞—É–∑–µ—Ä–µ');
            return false;
        }

        // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–∞—à Service Worker
        try {
            const registration = await navigator.serviceWorker.register('/service-worker.js', {
                scope: '/'
            });
            console.log('‚úÖ Service Worker –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:', registration);
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Service Worker:', error);
        }

        if (!window.OneSignal) {
            window.OneSignal = [];
        }

        window.OneSignal.push(function () {
            window.OneSignal.init({
                appId: ONESIGNAL_APP_ID,
                allowLocalhostAsSecureOrigin: true,
                autoRegister: true,
                autoResubscribe: true,
                notifyButton: {
                    enable: false,
                },
                welcomeNotification: {
                    disable: true,
                },
                // –í–∞–∂–Ω–æ: —É–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—à Service Worker
                serviceWorkerParam: {
                    scope: '/',
                },
                serviceWorkerPath: '/service-worker.js',
                // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                subdomainName: undefined, // –£–±–∏—Ä–∞–µ–º subdomain –¥–ª—è web push
            });
        });

        // –ñ–¥—ë–º —Å–æ–±—ã—Ç–∏—è initialized
        await new Promise((resolve) => {
            window.OneSignal.push(function () {
                window.OneSignal.on('initialized', () => {
                    console.log('‚úÖ OneSignal –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');
                    resolve(true);
                });
            });
        });

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        await checkSubscriptionStatus();

        console.log('‚úÖ OneSignal –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (push-—Å—Ç–∏–ª—å)');
        return true;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ OneSignal:', error);
        return false;
    }
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
const checkSubscriptionStatus = async () => {
    try {
        window.OneSignal.push(function () {
            window.OneSignal.isPushNotificationsEnabled((isEnabled: boolean) => {
                console.log('üì± Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã:', isEnabled);

                if (isEnabled) {
                    window.OneSignal.getUserId((userId: string) => {
                        console.log('üÜî OneSignal User ID:', userId);
                    });

                    window.OneSignal.getRegistrationId((registrationId: string) => {
                        console.log('üìã OneSignal Registration ID:', registrationId);
                    });
                } else {
                    console.log('‚ö†Ô∏è Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ');
                    window.OneSignal.registerForPushNotifications();
                }
            });
        });
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏:', error);
    }
};

// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
export const forceRefreshSubscription = async (): Promise<boolean> => {
    try {
        console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ OneSignal...');

        window.OneSignal.push(function () {
            // –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –∏ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –∑–∞–Ω–æ–≤–æ
            window.OneSignal.setSubscription(false);

            setTimeout(() => {
                window.OneSignal.setSubscription(true);
                console.log('‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
            }, 1000);
        });

        return true;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏:', error);
        return false;
    }
};

// –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ OneSignal
export const diagnoseOneSignal = async () => {
    try {
        console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ OneSignal...');

        const results = {
            serviceWorker: false,
            pushManager: false,
            oneSignalLoaded: false,
            subscriptionEnabled: false,
            userId: null,
            registrationId: null
        };

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º Service Worker
        if ('serviceWorker' in navigator) {
            results.serviceWorker = true;
            console.log('‚úÖ Service Worker –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
        } else {
            console.log('‚ùå Service Worker –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º Push API
        if ('PushManager' in window) {
            results.pushManager = true;
            console.log('‚úÖ Push API –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
        } else {
            console.log('‚ùå Push API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º OneSignal
        if (window.OneSignal) {
            results.oneSignalLoaded = true;
            console.log('‚úÖ OneSignal –∑–∞–≥—Ä—É–∂–µ–Ω');

            window.OneSignal.push(function () {
                window.OneSignal.isPushNotificationsEnabled((isEnabled: boolean) => {
                    results.subscriptionEnabled = isEnabled;
                    console.log('üì± –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞:', isEnabled);

                    if (isEnabled) {
                        window.OneSignal.getUserId((userId: string) => {
                            results.userId = userId;
                            console.log('üÜî User ID:', userId);
                        });

                        window.OneSignal.getRegistrationId((registrationId: string) => {
                            results.registrationId = registrationId;
                            console.log('üìã Registration ID:', registrationId);
                        });
                    }
                });
            });
        } else {
            console.log('‚ùå OneSignal –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
        }

        return results;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
        return null;
    }
};

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –º–µ—Ç–æ–¥–æ–≤ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
const withOneSignal = (cb: (OneSignal: any) => void) => {
    if (!window.OneSignal) window.OneSignal = [];
    window.OneSignal.push(function () {
        cb(window.OneSignal);
    });
};

// –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
export const requestNotificationPermission = async (): Promise<boolean> => {
    try {
        console.log('üîî –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');

        const OneSignalSDK = await loadOneSignalSDK();
        if (!OneSignalSDK) {
            console.error('‚ùå OneSignal SDK –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            return false;
        }

        const permission = await OneSignalSDK.Notifications.requestPermission();
        console.log('üì± –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è:', permission);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
        const permissionState = await OneSignalSDK.Notifications.permission;
        console.log('üì± –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π:', permissionState);

        return permission;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
        return false;
    }
};

// –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
export const subscribeToNotifications = async (): Promise<boolean> => {
    try {
        console.log('üì° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');

        const OneSignalSDK = await loadOneSignalSDK();
        if (!OneSignalSDK) {
            console.error('‚ùå OneSignal SDK –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            return false;
        }

        await OneSignalSDK.Notifications.setDefaultUrl('/');
        await OneSignalSDK.User.PushSubscription.optIn();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
        const isSubscribed = await OneSignalSDK.User.PushSubscription.optedIn;
        console.log('üì° –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏:', isSubscribed);

        // –ü–æ–ª—É—á–∞–µ–º Player ID
        const playerId = await OneSignalSDK.User.PushSubscription.id;
        console.log('üÜî Player ID:', playerId);

        if (!playerId) {
            console.error('‚ùå Player ID –Ω–µ –ø–æ–ª—É—á–µ–Ω - –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞');
            return false;
        }

        console.log('‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');
        return true;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
        return false;
    }
};

// –û—Ç–ø–∏—Å–∫–∞ –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
export const unsubscribeFromNotifications = async (): Promise<boolean> => {
    try {
        const OneSignalSDK = await loadOneSignalSDK();
        if (!OneSignalSDK) return false;

        await OneSignalSDK.User.PushSubscription.optOut();
        console.log('üì° –û—Ç–ø–∏—Å–∫–∞ –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
        return true;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø–∏—Å–∫–∏ –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
        return false;
    }
};

// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º (—á–µ—Ä–µ–∑ OneSignal REST API)
export const sendNotificationToAll = async (title: string, message: string, data?: any) => {
    try {
        console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:', { title, message, data });

        const requestBody = {
            app_id: ONESIGNAL_APP_ID,
            included_segments: ['All'],
            headings: { en: title },
            contents: { en: message },
            data: data || {},
            url: '/',
            chrome_web_icon: '/logo192.png',
            chrome_web_badge: '/logo192.png',
            // –î–æ–±–∞–≤–ª—è–µ–º –∑–≤—É–∫ –¥–ª—è —Ç—Ä–µ–≤–æ–∂–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            chrome_web_sound: data?.type === 'alarm' ? '/alarm.mp3' : undefined,
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ç—Ä–µ–≤–æ–∂–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            priority: data?.type === 'alarm' ? 10 : 5,
            require_interaction: data?.type === 'alarm' ? true : false,
        };

        console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ OneSignal:', JSON.stringify(requestBody, null, 2));

        const response = await fetch('https://onesignal.com/api/v1/notifications', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Basic ${ONESIGNAL_REST_API_KEY}`,
            },
            body: JSON.stringify(requestBody),
        });

        const responseText = await response.text();
        console.log('üì§ –û—Ç–≤–µ—Ç OneSignal:', response.status, responseText);

        if (response.ok) {
            console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º');
            return true;
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', response.statusText);
            return false;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
        return false;
    }
};

// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
export const sendNotificationToUsers = async (
    userIds: string[],
    title: string,
    message: string,
    data?: any
) => {
    try {
        console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:', { userIds, title, message });

        // –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const response = await fetch('https://onesignal.com/api/v1/notifications', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Basic ${ONESIGNAL_REST_API_KEY}`,
            },
            body: JSON.stringify({
                app_id: ONESIGNAL_APP_ID,
                include_external_user_ids: userIds,
                headings: { en: title },
                contents: { en: message },
                data: data || {},
                url: '/',
                chrome_web_icon: '/logo192.png',
                chrome_web_badge: '/logo192.png',
                // –î–æ–±–∞–≤–ª—è–µ–º –∑–≤—É–∫ –¥–ª—è —Ç—Ä–µ–≤–æ–∂–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                chrome_web_sound: data?.type === 'alarm' ? '/alarm.mp3' : undefined,
                // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ç—Ä–µ–≤–æ–∂–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                priority: data?.type === 'alarm' ? 10 : 5,
                require_interaction: data?.type === 'alarm' ? true : false,
            }),
        });

        const responseText = await response.text();
        console.log('–û—Ç–≤–µ—Ç OneSignal (–≤–Ω–µ—à–Ω–∏–µ ID):', response.status, responseText);

        if (response.ok) {
            console.log(`–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${userIds.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–µ ID`);
            return true;
        } else {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–µ ID:', response.status, responseText);

            // –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–µ ID, –ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º
            console.log('–ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º...');
            return await sendNotificationToAll(title, message, data);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
        return false;
    }
};

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–Ω–µ—à–Ω–µ–≥–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (push-—Å—Ç–∏–ª—å)
export const setExternalUserId = async (userId: string) => {
    try {
        return await new Promise((resolve) => {
            withOneSignal((OneSignal) => {
                console.log('OneSignal.User:', OneSignal.User);
                if (OneSignal.User && typeof OneSignal.User.login === 'function') {
                    OneSignal.User.login(userId).then(() => {
                        console.log(`–í–Ω–µ—à–Ω–∏–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (v16): ${userId}`);
                        resolve(true);
                    }).catch((e: any) => {
                        console.error('–û—à–∏–±–∫–∞ login:', e);
                        resolve(false);
                    });
                } else if (OneSignal.User && OneSignal.User.Login && typeof OneSignal.User.Login.set === 'function') {
                    OneSignal.User.Login.set({ id: userId }).then(() => {
                        console.log(`–í–Ω–µ—à–Ω–∏–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (fallback): ${userId}`);
                        resolve(true);
                    }).catch((e: any) => {
                        console.error('–û—à–∏–±–∫–∞ Login.set:', e);
                        resolve(false);
                    });
                } else {
                    console.error('OneSignal: –º–µ—Ç–æ–¥ User.login/set –Ω–µ –Ω–∞–π–¥–µ–Ω');
                    resolve(false);
                }
            });
        });
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–Ω–µ—à–Ω–µ–≥–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (v16):', error);
        return false;
    }
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
export const getSubscriptionState = async () => {
    try {
        const OneSignalSDK = await loadOneSignalSDK();
        if (!OneSignalSDK) return false;

        const isSubscribed = await OneSignalSDK.User.PushSubscription.optedIn;
        return isSubscribed;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏:', error);
        return false;
    }
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ Player ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const getPlayerId = async (): Promise<string | null> => {
    try {
        const OneSignalSDK = await loadOneSignalSDK();
        if (!OneSignalSDK) return null;

        const playerId = await OneSignalSDK.User.PushSubscription.id;
        console.log('Player ID –ø–æ–ª—É—á–µ–Ω:', playerId);
        return playerId;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è Player ID:', error);
        return null;
    }
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const getExternalUserId = async (): Promise<string | null> => {
    try {
        const OneSignalSDK = await loadOneSignalSDK();
        if (!OneSignalSDK) return null;

        const externalUserId = await OneSignalSDK.User.PushSubscription.externalUserId;
        console.log('–í–Ω–µ—à–Ω–∏–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', externalUserId);
        return externalUserId;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        return null;
    }
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è OneSignal
export const checkOneSignalStatus = async () => {
    try {
        console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è OneSignal...');

        const OneSignalSDK = await loadOneSignalSDK();
        if (!OneSignalSDK) {
            console.error('‚ùå OneSignal SDK –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            return false;
        }

        const isSubscribed = await OneSignalSDK.User.PushSubscription.optedIn;
        const playerId = await OneSignalSDK.User.PushSubscription.id;
        const externalUserId = await OneSignalSDK.User.PushSubscription.externalUserId;
        const permission = await OneSignalSDK.Notifications.permission;

        console.log('üìä === OneSignal Status ===');
        console.log('üì° –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞:', isSubscribed);
        console.log('üÜî Player ID:', playerId ? `${playerId.substring(0, 8)}...` : 'null');
        console.log('üë§ –í–Ω–µ—à–Ω–∏–π ID:', externalUserId);
        console.log('üîî –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', permission);
        console.log('========================');

        if (isSubscribed && playerId) {
            console.log('‚úÖ OneSignal –≥–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
            return true;
        } else {
            console.error('‚ùå OneSignal –Ω–µ –≥–æ—Ç–æ–≤: –ø–æ–¥–ø–∏—Å–∫–∞ –∏–ª–∏ Player ID –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
            return false;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è OneSignal:', error);
        return false;
    }
}; 